parameters:
    env(AWS_S3_READ_ENDPOINT): null
    env(AWS_S3_WRITE_ENDPOINT): null
    env(ELASTICSEARCH_HOST): 'http://elasticsearch:9200'


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\Serializer\SerialisationGroupGenerator:
        decorates: 'api_platform.serializer.context_builder'
        arguments:
            $decorated: '@App\Serializer\SerialisationGroupGenerator.inner'


    ### Services
    App\Service\MediaUploader:
        class: App\Service\MediaUploader
        arguments:
            $s3ReadClient: '@s3.read.client'
            $s3WriteClient: '@s3.write.client'
            $bucket: '%env(AWS_S3_BUCKET)%'
    
    App\Service\MercureTokenGenerator:
        class: App\Service\MercureTokenGenerator
        arguments:
            $factory: '@mercure.hub.default.jwt.factory'
    
    App\State\ElasticProvider:
        class: App\State\ElasticProvider
        arguments:
            $collectionExtensions: !tagged api_platform.elasticsearch.request_body_search_extension.collection
    
    App\Bridge\Elasticsearch\ElasticService:
        class: App\Bridge\Elasticsearch\ElasticService
        arguments:
            $environment: '%env(APP_ENV)%'
            $host: '%env(ELASTICSEARCH_HOST)%'
            $mappingDir: '%kernel.project_dir%/config/elasticsearch/mappings'
    
    
    s3.read.client:
        class: Aws\S3\S3Client
        arguments:
            -   version: '2006-03-01'
                endpoint: '%env(AWS_S3_READ_ENDPOINT)%'
                region: '%env(AWS_REGION)%'
                use_path_style_endpoint: true
    
    s3.write.client:
        class: Aws\S3\S3Client
        arguments:
            -   version: '2006-03-01'
                endpoint: '%env(AWS_S3_WRITE_ENDPOINT)%'
                region: '%env(AWS_REGION)%'
                use_path_style_endpoint: true
    
    ### Documentation
    App\OpenApi\OpenApiDecorator:
        decorates: 'api_platform.openapi.factory'
    
    App\OpenApi\AuthDecorator:
        decorates: 'api_platform.openapi.factory'

    ## Filters
    App\Extension\Elasticsearch\StatusEntityExtension:
        tags:
            - { name: "api_platform.elasticsearch.request_body_search_extension.collection" }
    
    App\Extension\Elasticsearch\FilterExtension:
        tags:
            - { name: "api_platform.elasticsearch.request_body_search_extension.collection" }
        arguments:
            $filterLocator: "@api_platform.filter_locator"

    ### Entity listeners
    App\Doctrine\EntityListener\UserListener:
        tags:
            - { name: doctrine.orm.entity_listener, priority: 10 }
    
    App\EventListener\AttachMercureTokenOnSuccessListener:
        tags:
            - {
                name: kernel.event_listener,
                event: lexik_jwt_authentication.on_authentication_success,
                method: attachMercureToken,
            }
    
    
    
    ### State Processors
    App\State\User\UserProcessor:
        bind:
            $decorated: '@ApiPlatform\Doctrine\Common\State\PersistProcessor'
    
    
    App\State\User\SignupProcessor:
        bind:
            $decorated: '@ApiPlatform\Doctrine\Common\State\PersistProcessor'
    
    App\State\Product\ProductProcessor:
        bind:
            $decorated: '@ApiPlatform\Doctrine\Common\State\PersistProcessor'
    
    App\State\MediaObject\MediaObjectProcessor:
        bind:
            $decorated: '@ApiPlatform\Symfony\Messenger\Processor'
    
    
    ### Entity listeners
    App\Doctrine\EntityListener\OwnedEntityListener:
        class: App\Doctrine\EntityListener\OwnedEntityListener
        tags:
            - { name: doctrine.event_listener, event: prePersist }
